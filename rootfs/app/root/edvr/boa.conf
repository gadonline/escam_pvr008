#[BOA_CFG_BEGIN]
# Boa v0.94 configuration file
# File format has not changed from 0.93
# File format has changed little from 0.92
# version changes are noted in the comments
#
# The Boa configuration file is parsed with a custom parser.  If it
# reports an error, the line number will be provided; it should be easy
# to spot.  The syntax of each of these rules is very simple, and they
# can occur in any order.  Where possible these directives mimic those
# of NCSA httpd 1.3; I saw no reason to introduce gratuitous
# differences.

# $Id: boa.conf,v 1.3.2.6 2003/02/02 05:02:22 jnelson Exp $

# The "ServerRoot" is not in this configuration file.  It can be
# compiled into the server (see defines.h) or specified on the command
# line with the -c option, for example:
#
# boa -c /usr/local/boa


# Port: The port Boa runs on.  The default port for http servers is 80.
# If it is less than 1024, the server must be started as root.

Port 80

# Listen: the Internet address to bind(2) to.  If you leave it out,
# it takes the behavior before 0.93.17.2, which is to bind to all
# addresses (INADDR_ANY).  You only get one "Listen" directive,
# if you want service on multiple IP addresses, you have three choices:
#    1. Run boa without a "Listen" directive
#       a. All addresses are treated the same; makes sense if the addresses
#          are localhost, ppp, and eth0.
#       b. Use the VirtualHost directive below to point requests to different
#          files.  Should be good for a very large number of addresses (web
#          hosting clients).
#    2. Run one copy of boa per IP address, each has its own configuration
#       with a "Listen" directive.  No big deal up to a few tens of addresses.
#       Nice separation between clients.
# The name you provide gets run through inet_aton(3), so you have to use dotted
# quad notation.  This configuration is too important to trust some DNS.

#Listen 192.68.0.5

#  User: The name or UID the server should run as.
# Group: The group name or GID the server should run as.

User root
Group root

# ServerAdmin: The email address where server problems should be sent.
# Note: this is not currently used, except as an environment variable
# for CGIs.

#ServerAdmin root@localhost

# PidFile: where to put the pid of the process.
# Comment out to write no pid file.
# Note: Because Boa drops privileges at startup, and the
# pid file is written by the UID/GID before doing so, Boa
# does not attempt removal of the pid file.
PidFile /var/run/boa.pid

# ErrorLog: The location of the error log file. If this does not start
# with /, it is considered relative to the server root.
# Set to /dev/null if you don't want errors logged.
# If unset, defaults to /dev/stderr
# Please NOTE: Sending the logs to a pipe ('|'), as shown below,
#  is somewhat experimental and might fail under heavy load.
# "Usual libc implementations of printf will stall the whole
#  process if the receiving end of a pipe stops reading."
#ErrorLog "|/usr/sbin/cronolog --symlink=/var/log/boa/error_log /var/log/boa/error-%Y%m%d.log"

#ErrorLog /var/log/boa_error_log

# AccessLog: The location of the access log file. If this does not
# start with /, it is considered relative to the server root.
# Comment out or set to /dev/null (less effective) to disable.
# Useful to set to /dev/stdout for use with daemontools.
# Access logging.  
# Please NOTE: Sending the logs to a pipe ('|'), as shown below,
#  is somewhat experimental and might fail under heavy load.
# "Usual libc implementations of printf will stall the whole
#  process if the receiving end of a pipe stops reading."
#AccessLog  "|/usr/sbin/cronolog --symlink=/var/log/boa/access_log /var/log/boa/access-%Y%m%d.log"

#AccessLog /var/log/boa_access_log

# CGILog /var/log/boa/cgi_log
# CGILog: The location of the CGI stderr log file. If this does not
# start with /, it is considered relative to the server root.
# The log file would contain any contents send to /dev/stderr
# by the CGI. If this is commented out, it defaults to whatever 
# ErrorLog points.  Set to /dev/null to disable CGI stderr logging.
# Please NOTE: Sending the logs to a pipe ('|'), as shown below,
#  is somewhat experimental and might fail under heavy load.
# "Usual libc implementations of printf will stall the whole
#  process if the receiving end of a pipe stops reading."
#CGILog  "|/usr/sbin/cronolog --symlink=/var/log/boa/cgi_log /var/log/boa/cgi-%Y%m%d.log"

# CGIumask 027 (no mask for user, read-only for group, and nothing for user)
# CGIumask 027
# The CGIumask is set immediately before execution of the CGI.

# UseLocaltime: Logical switch.  Uncomment to use localtime 
# instead of UTC time
UseLocaltime

# VerboseCGILogs: this is just a logical switch.
#  It simply notes the start and stop times of cgis in the error log
# Comment out to disable.

#VerboseCGILogs

# ServerName: the name of this server that should be sent back to 
# clients if different than that returned by gethostname + gethostbyname 

ServerName Mozart

# VirtualHost: a logical switch.
# Comment out to disable.
# Given DocumentRoot /var/www, requests on interface 'A' or IP 'IP-A'
# become /var/www/IP-A.
# Example: http://localhost/ becomes /var/www/127.0.0.1
#
# Not used until version 0.93.17.2.  This "feature" also breaks commonlog
# output rules, it prepends the interface number to each access_log line.
# You are expected to fix that problem with a postprocessing script.

#VirtualHost 


# VHostRoot: the root location for all virtually hosted data
# Comment out to disable.
# Incompatible with 'Virtualhost' and 'DocumentRoot'!!
# Given VHostRoot /var/www, requests to host foo.bar.com,
# where foo.bar.com is ip a.b.c.d,
# become /var/www/a.b.c.d/foo.bar.com 
# Hostnames are "cleaned", and must conform to the rules
# specified in rfc1034, which are be summarized here:
# 
# Hostnames must start with a letter, end with a letter or digit, 
# and have as interior characters only letters, digits, and hyphen.
# Hostnames must not exceed 63 characters in length.

#VHostRoot /var/www

# DefaultVHost
# Define this in order to have a default hostname when the client does not
# specify one, if using VirtualHostName. If not specified, the word
# "default" will be used for compatibility with older clients.

#DefaultVHost foo.bar.com

# DocumentRoot: The root directory of the HTML documents.
# Comment out to disable server non user files.

DocumentRoot /home/http/

# UserDir: The name of the directory which is appended onto a user's home
# directory if a ~user request is received.

#UserDir /home/http/download
UserDir public_html

# DirectoryIndex: Name of the file to use as a pre-written HTML
# directory index.  Please MAKE AND USE THESE FILES.  On the
# fly creation of directory indexes can be _slow_.
# Comment out to always use DirectoryMaker

DirectoryIndex index.html

# DirectoryMaker: Name of program used to create a directory listing.
# Comment out to disable directory listings.  If both this and
# DirectoryIndex are commented out, accessing a directory will give
# an error (though accessing files in the directory are still ok).

#DirectoryMaker /usr/lib/boa/boa_indexer

# DirectoryCache: If DirectoryIndex doesn't exist, and DirectoryMaker
# has been commented out, the the on-the-fly indexing of Boa can be used
# to generate indexes of directories. Be warned that the output is 
# extremely minimal and can cause delays when slow disks are used.
# Note: The DirectoryCache must be writable by the same user/group that 
# Boa runs as.

DirectoryCache /var/spool/

# KeepAliveMax: Number of KeepAlive requests to allow per connection
# Comment out, or set to 0 to disable keepalive processing

KeepAliveMax 1000

# KeepAliveTimeout: seconds to wait before keepalive connection times out

KeepAliveTimeout 10

# MimeTypes: This is the file that is used to generate mime type pairs
# and Content-Type fields for boa.
# Set to /dev/null if you do not want to load a mime types file.
# Do *not* comment out (better use AddType!)

#MimeTypes /etc/mime.types
MimeTypes /etc/conf.d/boa/mime.types

# DefaultType: MIME type used if the file extension is unknown, or there
# is no file extension.

DefaultType text/plain

# CGIPath: The value of the $PATH environment variable given to CGI progs.

CGIPath /bin:/usr/bin:/usr/local/bin:/usr/share/www/cgi-bin/admin:/home/rey/boa/cgi-bin

# SinglePostLimit: The maximum allowable number of bytes in 
# a single POST.  Default is normally 1MB.
SinglePostLimit 16777216

# AddType: adds types without editing mime.types
# Example: AddType type extension [extension ...]

# Uncomment the next line if you want .cgi files to execute from anywhere
AddType application/x-httpd-cgi cgi

# Redirect, Alias, and ScriptAlias all have the same semantics -- they
# match the beginning of a request and take appropriate action.  Use
# Redirect for other servers, Alias for the same server, and ScriptAlias
# to enable directories for script execution.

# Redirect allows you to tell clients about documents which used to exist in
# your server's namespace, but do not anymore. This allows you to tell the
# clients where to look for the relocated document.
# Example: Redirect /bar http://elsewhere/feh/bar

# Aliases: Aliases one path to another.
# Example: Alias /path1/bar /path2/foo

#Alias /doc /usr/doc
Alias /pmaskpic /etc/pmaskpic

# ScriptAlias: Maps a virtual path to a directory for serving scripts
# Example: ScriptAlias /htbin/ /www/htbin/

ScriptAlias /cgi-bin/ /usr/share/www/cgi-bin/

PasswdFile /etc/passwd
GroupFile /etc/group

UserFile /etc/conf.d/boa/userlist.conf
Realm root_realm root

# comment this line if the root's password is not blank
ProtRealm root_realm password

#ProtPath root_realm /usr/share/www/html/setup
#ProtPath root_realm /usr/share/www/cgi-bin/admin
ProtPath root_realm /usr/share/www/html
ProtPath root_realm /System/*
ProtPath root_realm /Network/*
ProtPath root_realm /PTZCtrl/*
ProtPath root_realm /Video/*
ProtPath root_realm /Streaming/*
#ProtPath root_realm /Security/*
ProtPath root_realm /Image/*


ProtPath root_realm /Network 
ProtPath root_realm /Network/* 
ProtPath root_realm /System/* 
ProtPath root_realm /Streams 
protPath root_realm /Streams/* 
ProtPath root_realm /Images 
ProtPath root_realm /Images/* 
ProtPath root_realm /Pictures 
ProtPath root_realm /Pictures/*
ProtPath root_realm /PTZ/*
ProtPath root_realm /EventsNotification/*
ProtPath root_realm /TwoWayAudio/* 
ProtPath root_realm /Snapshot/* 
ProtPath root_realm /Alarm/*
ProtPath root_realm /Alarm

ProtPath root_realm /System/FirmwareUpgrade
#ProtPath root_realm /live/0/main
ProtPath root_realm /download/*
ProtPath root_realm /download/
ProtPath root_realm /Record 
ProtPath root_realm /Record/*
ProtPath root_realm /Playback 
ProtPath root_realm /Playback/*
ProtPath root_realm /RecordFileList/*
ProtPath root_realm /SnapshotFileList/*

ProtSpace root_realm IP-Camera

#Realm vaadmin_realm vaadmin
#ProtRealm vaadmin_realm password
#ProtPath vaadmin_realm /usr/share/www/html/setup
#ProtSpace vaadmin_realm IP-Camera-vaadmin
#Realm vaviewer_realm vaviewer
#ProtRealm vaviewer_realm password
#ProtPath vaviewer_realm /usr/share/www/html
#ProtSpace vaviewer_realm IP-Camera-vaviewer


# stp over http
#rtsp_transfer_str#

# mjpeg server push
#serverpush_transfer_str#

TransferPostV2 /live/0/main /var/run/rtspoverhttpd.sck
TransferPostV2 /live/0/sub  /var/run/rtspoverhttpd.sck
TransferPostV2 /live/0/sub2 /var/run/rtspoverhttpd.sck
TransferPostV2 /onvif/device_service /var/run/onvifd.sck
TransferPostV2 /onvif/event_service/* /var/run/onvifd.sck
TransferPostV2 /onvif/image_service /var/run/onvifd.sck
TransferPostV2 /onvif/media_service /var/run/onvifd.sck
TransferPostV2 /onvif/media2_service /var/run/onvifd.sck 
TransferPostV2 /onvif/ptz_service /var/run/onvifd.sck 
TransferPostV2 /onvif/event_service /var/run/onvifd.sck
TransferPostV2 /onvif/analytics_service /var/run/onvifd.sck
TransferPostV2 /onvif/recording_service /var/run/onvifd.sck
TransferPostV2 /onvif/search_service /var/run/onvifd.sck
TransferPostV2 /onvif/replay_service /var/run/onvifd.sck


TransferPost /System/* /var/run/CGI.sck
TransferPost /PTZCtrl/* /var/run/CGI.sck
TransferPost /Video/* /var/run/CGI.sck
TransferPost /Network/* /var/run/CGI.sck
TransferPost /Streaming/* /var/run/CGI.sck
TransferPost /Security/* /var/run/CGI.sck
TransferPost /Image/* /var/run/CGI.sck

TransferPost /Record /var/run/CGI.sck 
TransferPost /Record/* /var/run/CGI.sck
TransferPost /Disk /var/run/CGI.sck

TransferPost /Network /var/run/CGI.sck
TransferPost /Network/* /var/run/CGI.sck
TransferPost /System/* /var/run/CGI.sck
TransferPost /Streams /var/run/CGI.sck
TransferPost /Streams/* /var/run/CGI.sck
TransferPost /Images /var/run/CGI.sck
TransferPost /Images/* /var/run/CGI.sck
TransferPost /Pictures /var/run/CGI.sck
TransferPost /Pictures/* /var/run/CGI.sck
TransferPost /PTZ/* /var/run/CGI.sck
TransferPost /EventsNotification/* /var/run/CGI.sck
TransferPost /TwoWayAudio/* /var/run/CGI.sck
TransferPost /Snapshot/* /var/run/CGI.sck
TransferPost /Alarm/* /var/run/CGI.sck
TransferPost /Playback /var/run/CGI.sck
TransferPost /Alarm /var/run/CGI.sck
TransferPost /RTMP/* /var/run/CGI.sck

TransferPost /Playback/* /var/run/CGI.sck
TransferPost /RecordFileList/* /var/run/CGI.sck
TransferPost /SnapshotFileList/* /var/run/CGI.sck

TransferPostV1 /System/FirmwareUpgrade /var/run/CGI_upgrade.sck
#[BOA_CFG_END]
